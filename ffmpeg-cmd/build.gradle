apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion COMPILE_TOOL_API as int
    buildToolsVersion COMPILE_TOOL_API_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK as int
        targetSdkVersion TRAGET_SDK as int  //29会无法读取内存卡.
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters /*"arm64-v8a",*/ "armeabi-v7a"
            }
        }
        ndk {
            abiFilters "armeabi-v7a"//"arm64-v8a"/*,"""armeabi-v7a"*/
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    ndkVersion = '20.0.5594570'
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

//加上这些
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}
//新建一个任务，这里只需要定义名字，下面的配置文件中会自动获取相关配置信息.
//上传maven或者私有库中.
/*bintrayUpload {

}*/
//apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");
apply from: new File(rootProject.projectDir, 'tools/gradle-bintray-upload.gradle')
repositories {
    mavenCentral()
}